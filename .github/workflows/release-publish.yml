# Copyright 2021 Siemens AG, Gaurav Mishra <mishra.gaurav@siemens.com>
# SPDX-License-Identifier: GPL-2.0 AND LGPL-2.1
name: Publish Release Packages

on:
  - release

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  release-build:

    strategy:
      matrix:
        os:
          - 'debian:buster'
          - 'debian:stretch'
          - 'debian:bullseye'
          - 'ubuntu:bionic'
          - 'ubuntu:focal'

    runs-on: ubuntu-latest
    container: ${{ matrix.os }}
    continue-on-error: true

    steps:
    - name: Install git
      run: |
        apt-get update
        apt-get install --no-install-recommends -y git ca-certificates

    - uses: actions/checkout@v1
      with:
        fetch-depth: 10

    - name: Setup cache
      uses: actions/cache@v2
      with:
        path: ${{ format('{0}/.composer', env.HOME) }}
        key: ${{ matrix.os }}-build-${{ hashFiles('src/composer.lock') }}
        restore-keys: |
          ${{ matrix.os }}-build-

    - name: Install dependencies
      run: |
        apt-get install --no-install-recommends -y wget lsb-release sudo composer curl php-cli
        apt-get install --no-install-recommends -y libcppunit-dev libcunit1-dev libdbd-sqlite3-perl
        apt-get install --no-install-recommends -y php-sqlite3 php-zip tar debhelper libssl-dev postgresql-server-dev-all
        ./utils/fo-installdeps -y -b
        ./install/scripts/install-spdx-tools.sh
        rm -rf src/vendor
        make clean phpvendors

    - name: Fetch tags
      run: |
        git fetch --tags

    - name: Get release info
      id: get_release
      uses: bruceadams/get-release@v1.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Set environment
      env:
        VERSION: ${{ steps.get_release.outputs.tag_name }}
      run: |
        echo PACKAGE_NAME=$(echo "FOSSology-${VERSION}-$(lsb_release -si | tr [:upper:] [:lower:])-$(lsb_release -sc | tr [:upper:] [:lower:]).tar.gz") >> $GITHUB_ENV

    - name: Build Debs
      run: ./utils/fo-debuild --no-sign

    - name: Rename package
      run: mv fossology_*.tar.gz ${PACKAGE_NAME}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: ${{ env.PACKAGE_NAME }}
        overwrite: true
        release_id: ${{ steps.get_release.outputs.id }}
        draft: ${{ steps.get_release.outputs.draft }}
        prerelease: ${{ steps.get_release.outputs.prerelease }}
        tag_name: ${{ steps.get_release.outputs.tag_name }}

  docker-release-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get release info
      id: get_release
      uses: bruceadams/get-release@v1.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Build and push main image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: gmishx/fossology:${{ steps.get_release.outputs.tag_name }}
        context: .
